import * as webpack from 'webpack';
import * as path from 'path';
import { NgNamedExportPlugin } from 'webpack-ng-dll-plugin';

export default (config: webpack.Configuration) => {
  config.plugins!.push(
    new webpack.DllReferencePlugin({
      context: path.resolve(__dirname),
      manifest: require('./dist/manifest.json'),
    })
  );
  const exportFilePath = path.resolve(
    __dirname,
    '<%= sourceRoot %>',
    'export-module.ts'
  );
  (config.entry as any).main.push(exportFilePath);
  config.plugins!.push(
    new NgNamedExportPlugin(exportFilePath, {
      name: 'centerLib',
      path: path.resolve(__dirname, 'dist', 'main-manifest.json'),
      watchWrite: true,
    })
  );
  let entry = config.entry as Record<string, string[]>;
  Object.keys(entry).forEach((item) => {
    if (item === 'main') {
      entry[item] = {
        import: entry[item],
        library: { name: 'centerLib', type: 'window' },
      } as any;
    } else {
      entry[item] = { import: entry[item] } as any;
    }
  });

  return config;
};
